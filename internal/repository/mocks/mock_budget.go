// Code generated by MockGen. DO NOT EDIT.
// Source: budget.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "gitlab.com/LazyBearCT/finance-bot/internal/model"
)

// MockBudget is a mock of Budget interface.
type MockBudget struct {
	ctrl     *gomock.Controller
	recorder *MockBudgetMockRecorder
}

// MockBudgetMockRecorder is the mock recorder for MockBudget.
type MockBudgetMockRecorder struct {
	mock *MockBudget
}

// NewMockBudget creates a new mock instance.
func NewMockBudget(ctrl *gomock.Controller) *MockBudget {
	mock := &MockBudget{ctrl: ctrl}
	mock.recorder = &MockBudgetMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBudget) EXPECT() *MockBudgetMockRecorder {
	return m.recorder
}

// GetBaseBudget mocks base method.
func (m *MockBudget) GetBaseBudget(ctx context.Context) (*model.Budget, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBaseBudget", ctx)
	ret0, _ := ret[0].(*model.Budget)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBaseBudget indicates an expected call of GetBaseBudget.
func (mr *MockBudgetMockRecorder) GetBaseBudget(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBaseBudget", reflect.TypeOf((*MockBudget)(nil).GetBaseBudget), ctx)
}

// GetBudgetByCodename mocks base method.
func (m *MockBudget) GetBudgetByCodename(ctx context.Context, name string) (*model.Budget, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBudgetByCodename", ctx, name)
	ret0, _ := ret[0].(*model.Budget)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBudgetByCodename indicates an expected call of GetBudgetByCodename.
func (mr *MockBudgetMockRecorder) GetBudgetByCodename(ctx, name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBudgetByCodename", reflect.TypeOf((*MockBudget)(nil).GetBudgetByCodename), ctx, name)
}
